/meta
author: Robin Gruenke
website: https://www.robingruenke.com
year: 2020
description: Generate application boilerplate with natural language
keywords: language generate prototype compiler application
title: Natural Language and Code Boilerplate

/introduction

Sometimes it is just tedious to setup similar code routines and boilerplate once again for a new Project.
I had this little idea to generate boilerplate and the basic functionality for an application by just using regular english terms.
In this Journal Topic I elaborate on how to use the english Language for creating simple prototypes. How much fun ! :-)

/chapter
topic: Defining basic terms
author: Robin Gruenke
date: 2020-03-16
picture: 371px https://images.unsplash.com/photo-1546074177-ffdda98d214f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1867&q=80
quote: [Wikipedia - The definition of Language] [A language is a structured system of communication. Language, in a broader sense, is the method of communication that involves the use of – particularly human – languages.] https://en.wikipedia.org/wiki/Language

As a first step, I want to create some basic terms and relations. I think of stuff in the real world and how they could be used in terms,
which could be compiled to some programming languages later on.

Declaration of stuff:

|code
number, name, description, task, calculation, address, date, currency, website
code|

Declaration of amounts:

|code
I have [a|an|number], some (stuff)
code|

Declaration of boundaries:

|code
I have a table (literally), list (like on a note)
code|

- A table just means you would have this sort of table like the one you have at home, with these chairs you can sit on. Just imagine you would have your desk with your stuff on it.
In programming, this table could translate to an object or dictionary.

- A list could be just a collection of notes you made. These notes can consist of anything of 'the' stuff !

Secondly, I want to say: 'You declare your stuff, and I ask specific questions later'. This way you can just write down what you have, and later on the compiler will ask you, for example, for a name for the calculation you noted.
This way we can define variable and function names in the code, without the user to worry about them in the first place.